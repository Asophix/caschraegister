openapi: 3.0.3
info:
  title: CaschRägister Service
  description: Dokumentation der Schnittstelle des Cash Registers
  contact:
    name: Blumen GmbH
  license:
    name: Blumen GmbH - All rights reserved.
  version: ${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}
tags:
  - name: users
    description: Benutzerbehandlung
paths:
  '/users/{userId}':
    get:
      tags:
        - users
      summary: Abfrage Benutzer-Info
      operationId: getUser
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Inhalt des Beteiligten
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Participant'
    put:
      tags:
        - users
      summary: Ablage neuer Benutzer-Info
      operationId: addUser
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
      requestBody:
        description: Inhalt des Beteiligten
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: Operation erfolgreich
          content:
            application/json:
              schema:
                type: string
    post:
      tags:
        - users
      summary: Aktualisierung Benutzer-Info
      operationId: updateUser
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
      requestBody:
        description: Inhalt des Beteiligten
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: Operation erfolgreich
          content:
            application/json:
              schema:
                type: string
    delete:
      tags:
        - users
      summary: Löschung Benutzer
      operationId: deleteUser
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Operation erfolgreich
          content:
            application/json:
              schema:
                type: string
  '/debts/from/{userId}':
    get:
      tags:
        - debts
      summary: Abfrage Schulden für Benutzer
      operationId: getDebtsForUser
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Schulden für Beteiligten
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Debt'
  '/debts/from/{userId}/to/{userIdTo}':
    get:
      tags:
        - debts
      summary: Abfrage Schulden für Benutzer, nach einem anderen Benutzer
      operationId: getDebtsBetweenUsers
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
        - name: userIdTo
          in: path
          description: ID der User, dem geschuldet wird
          required: true
          example: 2
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Schulden für Beteiligten
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Debt'
    post:
      tags:
        - debts
      summary: Ablage Schulden für Benutzer, nach einem anderen Benutzer
      operationId: updateDebtsBetweenUsers
      parameters:
        - name: userId
          in: path
          description: ID der User
          required: true
          example: 1
          schema:
            type: integer
            format: int64
        - name: userIdTo
          in: path
          description: ID der User, dem geschuldet wird
          required: true
          example: 2
          schema:
            type: integer
            format: int64
      requestBody:
        description: Liste Schulden
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
      responses:
        '200':
          description: Operation erfolgreich
          content:
            application/json:
              schema:
                type: string

components:
  schemas:
    Debt:
      description: Schuld zwischen zwei Beteiligten
      type: object
      properties:
        id:
          description: ID
          type: integer
          format: int64
          nullable: true
        name:
          description: Name
          type: string
        sourcePerson:
          $ref: '#/components/schemas/Participant'
        targetPerson:
          $ref: '#/components/schemas/Participant'
        summe:
          description: Summe zu bezahlen
          type: number
          format: float
    Participant:
      description: Beteiligter für Schuld/Administration
      type: object
      properties:
        id:
          description: ID
          type: integer
          format: int64
          nullable: true
        name:
          description: Name
          type: string
        avatar:
          description: CDN-Link fürs Avatar Beteiligtem
          type: string
          format: uri
        email:
          description: E-Mail Adresse
          type: string
          format: int32
  
